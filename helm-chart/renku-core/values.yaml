# Default values for renku-core.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 2
global:
  ## Specify a secret that containes the certificate
  ## if you would like to use a custom CA. The key for the secret
  ## should have the .crt extension otherwise it is ignored. The
  ## keys across all secrets are mounted as files in one location so
  ## the keys across all secrets have to be unique.
  certificates:
    image:
      repository: renku/certificates
      tag: '0.0.2'
    customCAs: []
    # - secret:
  ## Redis configuration. This is where renku-core expects to find
  ## a functioning redis instance and credentials to connect to it.
  redis:
    sentinel:
      enabled: true
      masterSet: mymaster
    dbIndex:
      coreService: "1"
    host: renku-redis
    port: 26379
    clientLabel:
      renku-redis-host: "true"
    existingSecret: redis-secret
    existingSecretPasswordKey: redis-password
  debug: false
# base path - this is the reverse proxy base path
apiBasePath: /api
cacheDirectory: /svc/cache
cleanupInterval: 60 # NOTE: This needs to be a divisor of, and less than cleanupFilesTTL|cleanupProjectsTTL.
projectCloneDepth: 1
templateCloneDepth: 1
maximumUploadSizeBytes: "1073741824" # 1 Gigabyte, store as string to keep Helm from converting it to scientific notation
requestTimeout: 600
datasetsWorkerQueues: datasets.jobs,delayed.ctrl.DatasetsCreateCtrl,delayed.ctrl.DatasetsAddFileCtrl,delayed.ctrl.DatasetsRemoveCtrl,delayed.ctrl.DatasetsImportCtrl,delayed.ctrl.DatasetsEditCtrl,delayed.ctrl.DatasetsUnlinkCtrl
managementWorkerQueues: cache.cleanup.files,cache.cleanup.projects,delayed.ctrl.MigrateProjectCtrl,delayed.ctrl.SetConfigCtrl
cleanupFilesTTL: 1800
cleanupProjectsTTL: 1800
logLevel: INFO
# override to automatically pull LFS data on clone
gitLFSSkipSmudge: 1
# Concurrency settings for the main service:
# the default it 4 workers with 8 threads set in the Dockerfile
nWorkers: 4
nThreads: 8
# NOTE: Make sure token secret is greater or equal to 32 bytes.
jwtTokenSecret: bW9menZ3cnh6cWpkcHVuZ3F5aWJycmJn
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
service:
  type: ClusterIP
  port: 80
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/affinity: cookie
    nginx.ingress.kubernetes.io/session-cookie-name: stickyCoreIngressCookie
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/affinity-mode: balanced
    nginx.ingress.kubernetes.io/session-cookie-path: /
  hosts: []
  tls: []
metrics:
  enabled: false
  image:
    repository: renku/rqmetrics
    tag: 0.0.2
    pullPolicy: IfNotPresent
resources:
  core: {}
  rqmetrics: {}
  datasetsWorkers: {}
  managementWorkers: {}
  scheduler: {}
  traefik: {}

# nodeSelector: {}

# tolerations: []

# affinity: {}

## Add sentry configuration
sentry:
  enabled: false
  dsn:
  environment:
  sampleRate: 0.2
# versions is the list of different deployment that support different metadata versions.
versions:
  latest:
    name: v10
    prefix: "10"
    nameOverride: ""
    fullnameOverride: ""
    image:
      repository: renku/renku-core
      tag: "v2.4.0"
      pullPolicy: IfNotPresent
  v9:
    name: v9
    prefix: "9"
    nameOverride: ""
    fullnameOverride: ""
    image:
      repository: renku/renku-core
      tag: "v1.11.3"
      pullPolicy: IfNotPresent
podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 100
securityContext:
  allowPrivilegeEscalation: false

traefik:
  image:
    name: renku/core-traefik
    tag: v1.8.0
    pullPolicy: IfNotPresent

horizontalPodAutoscaling:
  minReplicas: 2
  maxReplicas: 10
  averageMemoryUtilization: 50
