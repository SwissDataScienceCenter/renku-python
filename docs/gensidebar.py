# -*- coding: utf-8 -*-
#
# Copyright 2017-2020 - Swiss Data Science Center (SDSC)
# A partnership between École Polytechnique Fédérale de Lausanne (EPFL) and
# Eidgenössische Technische Hochschule Zürich (ETHZ).
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""Sidebar configuration."""

import os


def write_if_changed(fname, contents):

    try:
        with open(fname, "r") as fp:
            old_contents = fp.read()
    except:
        old_contents = ""

    if old_contents != contents:
        with open(fname, "w") as fp:
            fp.write(contents)


def generate_sidebar(conf, conf_api):

    # determine 'latest' or 'stable'
    # if not conf.do_gen:
    do_gen = os.environ.get("SIDEBAR", None) == "1" or conf["on_rtd"]
    version = conf["rtd_version"]

    lines = ["", ".. DO NOT MODIFY! THIS PAGE IS AUTOGENERATED!", ""]

    def toctree(name):
        lines.extend([".. toctree::", "    :caption: %s" % name, "    :maxdepth: 2", ""])

    def endl():
        lines.append("")

    def write(desc, link):
        if conf_api == "mlbench":
            args = desc, link
        elif not do_gen:
            return
        else:
            args = (
                desc,
                "https://mlbench.readthedocs.io/en/%s/%s.html" % (version, link),
            )

        lines.append("    %s <%s>" % args)

    def write_api(project, desc):
        if project != conf_api:
            if do_gen:
                args = desc, project, version
                lines.append("    %s API <https://mlbench.readthedocs.io/projects/%s/en/%s/api.html>" % args)
        else:
            lines.append("    %s API <api>" % desc)

    def write_ref(project, desc):
        if project != conf_api:
            if do_gen:
                args = desc, project, version
                lines.append("    %s <https://mlbench.readthedocs.io/projects/%s/en/%s/readme.html>" % args)
        else:
            lines.append("    %s <readme>" % desc)

    #
    # Specify the sidebar contents here
    #

    toctree("Renkulab")
    write("About Renku", "introduction/index", "renku")
    write("Getting Started", "getting_started", "renku")
    write("Using Renku", "user/index", "renku")
    write("Get in touch", "get_in_touch", "renku")
    write("Roadmap", "roadmap", "renku")
    write("Release Notes", "release_notes", "renku")

    write("Users", "user/index", "renku")
    write("Developers", "developer/index", "renku")
    write("Admins", "admin/index", "renku")
    write("License", "https://www.apache.org/licenses/LICENSE-2.0", "renku")
    endl()

    toctree("Components")
    write_ref("mlbench_helm", "Helm Chart")
    write_ref("mlbench_dashboard", "Dashboard")
    write_ref("mlbench_benchmarks", "Benchmarks")
    write_api("mlbench_core", "Core")
    endl()

    toctree("Additional Info")
    write("Developer Guide", "devguide")
    write("Contributing", "contributing")
    write("Changelog", "changelog")
    endl()

    write_if_changed("_sidebar.rst.inc", "\n".join(lines))
