name: Install dependencies on Linux
description: Install dependencies on Linux
inputs:
  python-version:
    description: "Python version to install"
    required: false
    default: "3.10"
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3.6.0
      with:
        fetch-depth: 0
    - name: Checkout repository
      shell: bash
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    - name: Install system packages
      shell: bash
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libyaml-0-2 libyaml-dev unzip fuse3
        sudo -v ; curl https://rclone.org/install.sh | sudo bash
    - uses: actions/cache@master
      id: dependency-cache
      with:
        path: |
          ${{ env.pythonLocation }}
          renku/templates
        key: ${{ env.DEPENDENCY_CACHE_PREFIX }}-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}-${{ hashFiles('Makefile') }}
      env:
        DEPENDENCY_CACHE_PREFIX: "20230929"
    - name: Install dependencies
      if: steps.dependency-cache.outputs.cache-hit != 'true' || 'refs/heads/master' == github.ref || 'refs/heads/develop' == github.ref || startsWith(github.ref, 'refs/tags/')
      env:
        POETRY_VIRTUALENVS_CREATE: "false"
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install coveralls poetry wheel twine
        poetry self add "poetry-dynamic-versioning[plugin]"
        make download-templates
        poetry install -E service --with dev,tests,docs
    - name: Install renku into cache
      if: steps.dependency-cache.outputs.cache-hit == 'true'
      env:
        POETRY_VIRTUALENVS_CREATE: "false"
      shell: bash
      run: |
        poetry install -E service --with dev,tests,docs
    - name: Set Git config
      shell: bash
      run: |
        git config --global --add user.name "Renku Bot"
        git config --global --add user.email "renku@datascience.ch"
    - id: year-week
      shell: bash
      run: echo "date=$(date '+%Y-%V')" >> $GITHUB_OUTPUT
    - name: Network cache
      uses: actions/cache@master
      with:
        path: cassettes
        key: ${{ env.NETWORK_CACHE_PREFIX }}-${{ steps.year-week.outputs.date }}-${{ hashFiles('poetry.lock') }}-${{ github.job }}
      env:
        NETWORK_CACHE_PREFIX: "20230929"
    - name: Set coveralls path mapping
      shell: bash
      run: |
        echo "

        [tool.coverage.paths]
        source = [
            \"renku/\",
            \"$(python -c 'import sysconfig; print(sysconfig.get_paths()["purelib"])')/renku/\"
        ]" >> pyproject.toml
