name: Test, Integration Tests and Deploy

on:
  push:
    branches:
    - '**'
    tags:
    - 'v*.*.*'

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: set matrix
      id: set-matrix
      env:
        REF: ${{ github.ref }}
      run: |
        if [ "$REF" == "refs/heads/master" ] || [[ "$REF" =~ ^refs/tags/.* ]]
        then
            echo "::set-output name=matrix::{\"python-version\": [\"3.6\", \"3.7\", \"3.8\"]}"
        else
            echo "::set-output name=matrix::{\"python-version\": [\"3.7\"]}"
        fi
  cleanup-runs:
    runs-on: ubuntu-latest
    steps:
    - uses: rokroskar/workflow-run-cleanup-action@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/master'"

  style-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install coveralls setuptools wheel
        python -m pip install .[all]
        git config --global --add user.name "Renku @ SDSC"
        git config --global --add user.email "renku@datascience.ch"
    - name: Test style
      run: ./run-tests.sh -s

  docs-linux:
    runs-on: ubuntu-latest
    needs: [set-matrix]
    strategy:
      max-parallel: 3
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install coveralls setuptools wheel
        python -m pip install .[all]
        git config --global --add user.name "Renku @ SDSC"
        git config --global --add user.email "renku@datascience.ch"
    - name: Test docs
      env:
        SIDEBAR: 1
      run: ./run-tests.sh -d

  test-distro:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: "3.6"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        python -m pip install -e .[all]
    - name: Build Package
      run: python setup.py sdist bdist_wheel
    - name: test with twine
      run: twine check dist/*

  test-linux-api:
    runs-on: ubuntu-latest
    needs: [set-matrix]
    strategy:
      max-parallel: 3
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install system packages
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libyaml-0-2 libyaml-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install coveralls setuptools wheel
        python -m pip install -e .[nodocs]
        python setup.py --version
        git config --global --add user.name "Renku @ SDSC"
        git config --global --add user.email "renku@datascience.ch"
    - name: Test with pytest
      env:
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
      run: pytest -v -m "not integration and not publish and not serial" -n auto tests/api
    - name: Coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        RENKU_REQUESTS_TIMEOUT_SECONDS: 120
      run: coveralls
      continue-on-error: true

  test-linux-cli:
    runs-on: ubuntu-latest
    needs: [set-matrix]
    strategy:
      max-parallel: 3
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install system packages
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libyaml-0-2 libyaml-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install coveralls setuptools wheel
        python -m pip install -e .[nodocs]
        python setup.py --version
        git config --global --add user.name "Renku @ SDSC"
        git config --global --add user.email "renku@datascience.ch"
    - name: Test with pytest
      env:
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
      run: pytest -v -m "not integration and not publish and not serial" -n auto  tests/cli
    - name: Test with pytest(serial)
      env:
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
      run: pytest -v -m "not integration and not publish and serial"  tests/cli
    - name: Coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        RENKU_REQUESTS_TIMEOUT_SECONDS: 120
      run: coveralls
      continue-on-error: true

  test-linux-core:
    runs-on: ubuntu-latest
    needs: [set-matrix]
    strategy:
      max-parallel: 3
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libyaml-0-2 libyaml-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install coveralls setuptools wheel
          python -m pip install -e .[nodocs]
          python setup.py --version
          git config --global --add user.name "Renku @ SDSC"
          git config --global --add user.email "renku@datascience.ch"
      - name: Test with pytest
        env:
          LANG: en_US.UTF-8
          LC_ALL: en_US.UTF-8
        run: pytest -v -m "not integration and not publish and not serial" -n auto tests/core
      - name: Test with pytest(serial)
        env:
          LANG: en_US.UTF-8
          LC_ALL: en_US.UTF-8
        run: pytest -v -m "not integration and not publish and serial" tests/core
      - name: Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          RENKU_REQUESTS_TIMEOUT_SECONDS: 120
        run: coveralls
        continue-on-error: true

  test-linux-service:
    runs-on: ubuntu-latest
    needs: [set-matrix]
    strategy:
      max-parallel: 3
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libyaml-0-2 libyaml-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install coveralls setuptools wheel
          python -m pip install -e .[nodocs]
          python setup.py --version
          git config --global --add user.name "Renku @ SDSC"
          git config --global --add user.email "renku@datascience.ch"
      - name: Test with pytest
        env:
          LANG: en_US.UTF-8
          LC_ALL: en_US.UTF-8
        run: pytest -v -m "not integration and not publish" -n auto tests/service
      - name: Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          RENKU_REQUESTS_TIMEOUT_SECONDS: 120
        run: coveralls
        continue-on-error: true

  test-macos-api:
    runs-on: macos-latest
    needs: [set-matrix]
    strategy:
      max-parallel: 3
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        brew update || true
        brew install git-lfs shellcheck node || brew link --overwrite node
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel twine
        python -m pip install -e .[all]
        git config --global --add user.name "Renku @ SDSC"
        git config --global --add user.email "renku@datascience.ch"
    - name: Test with pytest
      env:
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
        RENKU_REQUESTS_TIMEOUT_SECONDS: 120
      run: pytest -v -m "not integration and not publish and not serial" tests/api

  test-macos-cli:
    runs-on: macos-latest
    needs: [set-matrix]
    strategy:
      max-parallel: 3
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        brew update || true
        brew install git-lfs shellcheck node || brew link --overwrite node
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel twine
        python -m pip install -e .[all]
        git config --global --add user.name "Renku @ SDSC"
        git config --global --add user.email "renku@datascience.ch"
    - name: Test with pytest
      env:
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
        RENKU_REQUESTS_TIMEOUT_SECONDS: 120
      run: pytest -v -m "not integration and not publish and not serial" tests/cli
    - name: Test with pytest(serial)
      env:
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
        RENKU_REQUESTS_TIMEOUT_SECONDS: 120
      run: pytest -v -m "not integration and not publish and serial" tests/cli

  test-macos-core:
    runs-on: macos-latest
    needs: [set-matrix]
    strategy:
      max-parallel: 3
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          brew update || true
          brew install git-lfs shellcheck node || brew link --overwrite node
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine
          python -m pip install -e .[all]
          git config --global --add user.name "Renku @ SDSC"
          git config --global --add user.email "renku@datascience.ch"
      - name: Test with pytest
        env:
          LANG: en_US.UTF-8
          LC_ALL: en_US.UTF-8
          RENKU_REQUESTS_TIMEOUT_SECONDS: 120
        run: pytest -v -m "not integration and not publish and not serial" tests/core
      - name: Test with pytest(serial)
        env:
          LANG: en_US.UTF-8
          LC_ALL: en_US.UTF-8
          RENKU_REQUESTS_TIMEOUT_SECONDS: 120
        run: pytest -v -m "not integration and not publish and serial" tests/core

  test-macos-service:
    runs-on: macos-latest
    needs: [set-matrix]
    strategy:
      max-parallel: 3
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          brew update || true
          brew install git-lfs shellcheck node || brew link --overwrite node
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine
          python -m pip install -e .[all]
          git config --global --add user.name "Renku @ SDSC"
          git config --global --add user.email "renku@datascience.ch"
      - name: Test with pytest
        env:
          LANG: en_US.UTF-8
          LC_ALL: en_US.UTF-8
          RENKU_REQUESTS_TIMEOUT_SECONDS: 120
        run: pytest -v -m "not integration and not publish" tests/service

  test-linux-integration:
    runs-on: ubuntu-latest
    needs: [set-matrix]
    strategy:
      max-parallel: 3
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install system packages
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libyaml-0-2 libyaml-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install coveralls setuptools wheel
        python -m pip install -e .[nodocs]
        git config --global --add user.name "Renku @ SDSC"
        git config --global --add user.email "renku@datascience.ch"
    - name: Test with pytest
      env:
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
        DATAVERSE_ACCESS_TOKEN: ${{ secrets.DATAVERSE_ACCESS_TOKEN }}
        IT_OAUTH_GIT_TOKEN: ${{ secrets.IT_OAUTH_GIT_TOKEN }}
        ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_ACCESS_TOKEN }}
        RENKU_REQUESTS_TIMEOUT_SECONDS: 120
      run: pytest -m integration -v --timeout=600 -n auto

  test-macos-integration:
    runs-on: macos-latest
    needs: [set-matrix]
    strategy:
      max-parallel: 1
      matrix: ${{fromJson(needs.set-matrix.outputs.matrix)}}
    if: "startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        brew update || true
        brew install git-lfs shellcheck node || brew link --overwrite node
        python -m pip install --upgrade pip
        python -m pip install setuptools wheel
        python -m pip install -e .[all]
        git config --global --add user.name "Renku @ SDSC"
        git config --global --add user.email "renku@datascience.ch"
    - name: Test with pytest
      env:
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
        DATAVERSE_ACCESS_TOKEN: ${{ secrets.DATAVERSE_ACCESS_TOKEN }}
        IT_OAUTH_GIT_TOKEN: ${{ secrets.IT_OAUTH_GIT_TOKEN }}
        ZENODO_ACCESS_TOKEN: ${{ secrets.ZENODO_ACCESS_TOKEN }}
        RENKU_REQUESTS_TIMEOUT_SECONDS: 120
      run: pytest -m integration -v

  publish-pypi:
    runs-on: ubuntu-latest
    needs: [docs-linux, test-linux-cli, test-linux-core, test-linux-service, test-macos-cli, test-macos-core, test-macos-service, test-linux-integration, test-macos-integration]
    if: "startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: "3.6"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        python -m pip install -e .[all]
        git config --global --add user.name "Renku @ SDSC"
        git config --global --add user.email "renku@datascience.ch"
    - name: Tag if necessary
      if: "!startsWith(github.ref, 'refs/tags/')"
      run: |
        renku --version
        export GIT_TAG=$(renku --version)
        git tag $GIT_TAG
    - name: Build Package
      run: python setup.py sdist bdist_wheel
    - name: Publish a Python distribution to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_ACCESS_TOKEN }}
    - name: Github Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
    - name: write release URL to file
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release-url.txt
    - name: Upload release URL for other jobs
      uses: actions/upload-artifact@v1
      with:
        name: release-url
        path: release-url.txt

  push-image:
    runs-on: ubuntu-latest
    needs: [docs-linux, test-linux-cli, test-linux-core, test-linux-service, test-macos-cli, test-macos-core, test-macos-service]
    if: "startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'"
    steps:
    - uses: actions/checkout@v2
    - name: Docker Login
      uses: Azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: build and push image
      run: |
        make docker-push

  publish-chart:
    runs-on: ubuntu-latest
    needs: [docs-linux, test-linux-cli, test-linux-core, test-linux-service, test-macos-cli, test-macos-core, test-macos-service, test-linux-integration, test-macos-integration]
    if: "startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'"
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: set up environment variables
      run: |
        echo "GIT_USER=Renku Bot" >> $GITHUB_ENV
        echo "GIT_EMAIL=renku@datascience.ch" >> $GITHUB_ENV
    - name: Push chart and images
      uses: SwissDataScienceCenter/renku/actions/publish-chart@master
      env:
        CHART_PATH: helm-chart/renku-core
        GITHUB_TOKEN: ${{ secrets.RENKU_CI_TOKEN }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    - name: Wait for chart to be available
      run: sleep 120
    - name: Update component version
      uses: SwissDataScienceCenter/renku/actions/update-component-version@master
      env:
        CHART_NAME: renku-core
        GITHUB_TOKEN: ${{ secrets.RENKU_CI_TOKEN }}
