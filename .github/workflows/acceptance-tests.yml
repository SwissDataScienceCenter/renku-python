name: Acceptance tests

on:
  pull_request:
    types:
    - opened
    - edited
    - synchronize
    - reopened
    - closed

jobs:
  cleanup-previous-runs:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    steps:
    - uses: rokroskar/workflow-run-cleanup-action@v0.3.0
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  check-deploy:
    runs-on: ubuntu-20.04
    outputs:
      pr-contains-string: ${{ steps.deploy-comment.outputs.pr-contains-string }}
      renku: ${{ steps.deploy-comment.outputs.renku}}
      renku-gateway: ${{ steps.deploy-comment.outputs.renku-gateway}}
      renku-graph: ${{ steps.deploy-comment.outputs.renku-graph}}
      renku-notebooks: ${{ steps.deploy-comment.outputs.renku-notebooks}}
      renku-ui: ${{ steps.deploy-comment.outputs.renku-ui}}
      test-enabled: ${{ steps.deploy-comment.outputs.test-enabled}}
      extra-values: ${{ steps.deploy-comment.outputs.extra-values}}
    steps:
      - id: deploy-comment
        uses: SwissDataScienceCenter/renku-actions/check-pr-description@v0.5.0
        with:
          string: /deploy
          pr_ref: ${{ github.event.number }}
  deploy-pr:
    needs: check-deploy
    if: github.event.action != 'closed' && needs.check-deploy.outputs.pr-contains-string == 'true'
    runs-on: ubuntu-20.04
    environment:
      name: renku-ci-rp-${{ github.event.number }}
    steps:
    - name: deploy-pr
      uses: SwissDataScienceCenter/renku-actions/deploy-renku@v0.5.0
      env:
        DOCKER_PASSWORD: ${{ secrets.RENKU_DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.RENKU_DOCKER_USERNAME }}
        GITLAB_TOKEN: ${{ secrets.DEV_GITLAB_TOKEN }}
        KUBECONFIG: "${{ github.workspace }}/renkubot-kube.config"
        RANCHER_PROJECT_ID: ${{ secrets.CI_RANCHER_PROJECT }}
        RENKU_RELEASE: renku-ci-rp-${{ github.event.number }}
        RENKU_VALUES_FILE: "${{ github.workspace }}/values.yaml"
        RENKU_VALUES: ${{ secrets.CI_RENKU_VALUES }}
        RENKUBOT_KUBECONFIG: ${{ secrets.RENKUBOT_DEV_KUBECONFIG }}
        RENKUBOT_RANCHER_BEARER_TOKEN: ${{ secrets.RENKUBOT_RANCHER_BEARER_TOKEN }}
        RANCHER_DEV_API_ENDPOINT: ${{ secrets.RANCHER_DEV_API_ENDPOINT }}
        RENKU_BOT_DEV_PASSWORD: ${{ secrets.RENKU_BOT_DEV_PASSWORD }}
        RENKU_ANONYMOUS_SESSIONS: true
        RENKU_TESTS_ENABLED: true
        TEST_ARTIFACTS_PATH: "tests-artifacts-${{ github.sha }}"
        renku_core: "@${{ github.head_ref }}"
        renku: "${{ needs.check-deploy.outputs.renku }}"
        renku_gateway: "${{ needs.check-deploy.outputs.renku-gateway }}"
        renku_graph: "${{ needs.check-deploy.outputs.renku-graph }}"
        renku_notebooks: "${{ needs.check-deploy.outputs.renku-notebooks }}"
        renku_ui: "${{ needs.check-deploy.outputs.renku-ui }}"
        extra_values: "${{ needs.check-deploy.outputs.extra-values }}"
    - name: Check existing renkubot comment
      uses: peter-evans/find-comment@v1
      id: findcomment
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'RenkuBot'
        body-includes: "You can access the deployment of this PR at"
    - name: Create comment pre deploy
      if: steps.findcomment.outputs.comment-id == 0
      uses: peter-evans/create-or-update-comment@v1
      with:
        token: ${{ secrets.RENKUBOT_GITHUB_TOKEN }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          You can access the deployment of this PR at https://renku-ci-rp-${{ github.event.number }}.dev.renku.ch

  test-pr:
    runs-on: ubuntu-20.04
    if: github.event.action != 'closed'
    needs: [check-deploy, deploy-pr]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Test the PR
      if: "needs.check-deploy.outputs.pr-contains-string == 'true' && needs.check-deploy.outputs.test-enabled == 'true'"
      env:
        KUBECONFIG: ${{ github.workspace }}/renkubot-kube.config
        RENKUBOT_KUBECONFIG: ${{ secrets.RENKUBOT_DEV_KUBECONFIG }}
        RENKU_RELEASE: renku-ci-rp-${{ github.event.number }}
      run: |
        echo "$RENKUBOT_KUBECONFIG" > ${{ github.workspace }}/renkubot-kube.config
        helm test ${RENKU_RELEASE} --namespace ${RENKU_RELEASE} --timeout 80m --logs
    - name: Download artifact for packaging on failure
      if: failure()
      uses: SwissDataScienceCenter/renku-actions/download-test-artifacts@v0.5.0
      env:
        RENKU_VALUES: ${{ secrets.CI_RENKU_VALUES }}
        TEST_ARTIFACTS_PATH: "tests-artifacts-${{ github.sha }}"
    - name: Upload screenshots on failure
      if: failure()
      uses: actions/upload-artifact@v1
      with:
        name: acceptance-test-artifacts
        path: ${{ github.workspace }}/test-artifacts/
  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: renku teardown
      uses: SwissDataScienceCenter/renku-actions/teardown-renku@v0.5.0
      env:
        GITLAB_TOKEN: ${{ secrets.DEV_GITLAB_TOKEN }}
        KUBECONFIG: "${{ github.workspace }}/renkubot-kube.config"
        RENKU_RELEASE: renku-ci-rp-${{ github.event.number }}
        RENKUBOT_KUBECONFIG: ${{ secrets.RENKUBOT_DEV_KUBECONFIG }}
