name: Acceptance tests

on:
  pull_request:
    types:
    - opened
    - edited
    - synchronize
    - reopened
    - closed
    paths:
    - renku/service
    - renku/core
    - helm-chart

jobs:
  deploy-pr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: renku build and deploy
      uses: SwissDataScienceCenter/renku/actions/deploy-renku@000-deploy-action
      env:
        RANCHER_PROJECT_ID: ${{ secrets.CI_RANCHER_PROJECT }}
        DOCKER_PASSWORD: ${{ secrets.RENKU_DOCKER_PASSWORD }}
        DOCKER_USERNAME: ${{ secrets.RENKU_DOCKER_USERNAME }}
        GITLAB_TOKEN: ${{ secrets.DEV_GITLAB_TOKEN }}
        KUBECONFIG: "${{ github.workspace }}/renkubot-kube.config"
        RENKU_NAMESPACE: ci-renku-python-${{ github.event.number }}-renku
        RENKU_TMP_NAMESPACE: ci-renku-python-${{ github.event.number }}-renku-tmp
        RENKU_RELEASE: ci-renku-python-${{ github.event.number }}-renku
        RENKU_VALUES_FILE: "${{ github.workspace }}/values.yaml"
        RENKU_VALUES: ${{ secrets.CI_RENKU_VALUES }}
        RENKUBOT_KUBECONFIG: ${{ secrets.RENKUBOT_DEV_KUBECONFIG }}
        RENKUBOT_RANCHER_BEARER_TOKEN: ${{ secrets.RENKUBOT_RANCHER_BEARER_TOKEN }}
        renku: "@development"
        renku_core: "@${{ github.head_ref }}"
  test-pr:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    needs: deploy-pr
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        sudo apt-get update -y && sudo apt-get install -y grep
        pip install yq
    - name: Test the PR
      env:
        RENKU_BOT_DEV_PASSWORD: ${{ secrets.RENKU_BOT_DEV_PASSWORD }}
        RENKU_RELEASE: "ci-renku-python-${{ github.event.number }}-renku"
      run: |
        RENKU_PYTHON_VERSION=$(git rev-parse HEAD)
        echo "Passing renku-python version $RENKU_PYTHON_VERSION"

        git clone https://github.com/SwissDataScienceCenter/renku.git /tmp/renku
        cd /tmp/renku/
        git checkout development
        cd acceptance-tests
        COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose build --build-arg renku_python_ref=${RENKU_PYTHON_VERSION} sbt
        docker-compose run -e RENKU_TEST_URL=https://${RENKU_RELEASE}.dev.renku.ch \
                           -e RENKU_TEST_FULL_NAME="Renku Bot" \
                           -e RENKU_TEST_EMAIL="renku@datascience.ch" \
                           -e RENKU_TEST_REGISTER="1" \
                           -e RENKU_TEST_USERNAME="renku-test" \
                           -e RENKU_TEST_PASSWORD="$RENKU_BOT_DEV_PASSWORD" \
                           -e RENKU_TEST_ANON_AVAILABLE="true" sbt
    - name: Prepare artifact for packaging on failure
      if: failure()
      run: |
        mkdir test-artifacts
        cp target/*.png test-artifacts 2>/dev/null || :
        cp target/*.log test-artifacts 2>/dev/null || :
        sudo rm -rf target/20*/.renku/cache 2>/dev/null || :
        cp -r target/20* test-artifacts 2>/dev/null || :
    - name: Upload screenshots on failure
      if: failure()
      uses: actions/upload-artifact@v1
      with:
        name: acceptance-test-artifacts
        path: test-artifacts
  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
    - uses: docker://alpine/k8s:1.16.8
      name: k8s teardown
      env:
        KUBECONFIG: ${{ github.workspace }}/renkubot-kube.config
        RENKUBOT_KUBECONFIG: ${{ secrets.RENKUBOT_KUBECONFIG }}
        RENKU_RELEASE: "ci-${{ github.event.number }}-renku"
        RENKU_NAMESPACE: "ci-${{ github.event.number }}-renku"
      with:
        command: |
          echo "$RENKUBOT_KUBECONFIG" > renkubot-kube.config
          chmod 400 renkubot-kube.config
          kubectl delete ns $RENKU_NAMESPACE
          kubectl delete ns $RENKU_NAMESPACE-tmp
    - name: gitlab teardown
      env:
        GITLAB_TOKEN: ${{ secrets.GITLAB_DEV_TOKEN }}
        RENKU_RELEASE: "ci-${{ github.event.number }}-renku"
      run: |
        apps=$(curl -s https://dev.renku.ch/gitlab/api/v4/applications -H "private-token: ${GITLAB_TOKEN}" | jq -r ".[] | select(.application_name == \"${RENKU_RELEASE}\") | .id")
        for app in $apps
        do
          curl -X DELETE https://dev.renku.ch/gitlab/api/v4/applications/${app} -H "private-token: ${GITLAB_TOKEN}"
        done
