version: '3'

networks:
  net:

services:
  redis:
    image: redis:5.0.3-alpine
    ports:
      - "6379:6379"
    networks:
      - net

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    networks:
      - net
    volumes:
      - ../prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - net

  rq-metrics:
    image: renku/rqmetrics:latest
    container_name: rq-metrics
    depends_on:
      - redis
    environment:
      RQ_REDIS_HOST: redis
    ports:
      - "8765:8765"
    networks:
      - net

  rq-dashboard:
    image: eoranged/rq-dashboard:v0.6.1
    container_name: rq-dashboard
    depends_on:
      - redis
    environment:
      RQ_DASHBOARD_REDIS_URL: redis://redis:6379
    networks:
      - net
    ports:
      - "9181:9181"

  renku-svc:
    build:
      context: .
      dockerfile: Dockerfile.svc
    networks:
      - net
    env_file: .env
    depends_on:
      - redis
    ports:
      - "8080:8080"
    volumes:
      - /tmp/renku:/tmp/renku

  renku-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.svc
    entrypoint: ["renku", "service", "scheduler"]
    depends_on:
      - redis
    networks:
      - net
    env_file: .env

  renku-worker:
    build:
      context: .
      dockerfile: Dockerfile.svc
    entrypoint: ["renku", "service", "worker"]
    depends_on:
      - redis
    networks:
      - net
    env_file: .env
    volumes:
      - /tmp/renku:/tmp/renku
