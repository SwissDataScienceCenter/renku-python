# Copyright Swiss Data Science Center (SDSC). A partnership between
# École Polytechnique Fédérale de Lausanne (EPFL) and
# Eidgenössische Technische Hochschule Zürich (ETHZ).
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[tool]

[tool.poetry]
name = "renku"
version = "0.0.0" # placeholder, see poetry-dynamic-versioning
description = "Python SDK and CLI for the Renku platform."
license = "Apache License 2.0"
keywords = ["Renku", "CLI"]
classifiers = [
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Development Status :: 4 - Beta",
]
homepage = "https://github.com/swissdatasciencecenter/renku-python"
documentation = "https://renku-python.rtfd.io/"

authors = ["Swiss Data Science Center <contact@datascience.ch>"]
include = ["renku/*", "renku/**/*", "CHANGES.rst", "AUTHORS.rst"]
readme = "README.rst"

[tool.poetry.urls]
Changelog = "https://github.com/swissdatasciencecenter/renku-python/blob/master/CHANGES.rst"

[tool.poetry.dependencies]
python = ">=3.8.1,<3.12"
attrs = "^23.1.0"
bashlex = "^0.16"
calamus = "^0.4"
click = "~8.1.7"
click-option-group = "^0.5.2"
click-plugins = "~1.1.1"
coverage = { version = "^6.0", extras=["toml"], optional = true }
cryptography = "^41.0.7"
cwl-utils = "^0.27"
cwltool = "==3.1.20230601100705"
deal = "~4.24.3"
deepdiff = "~6.7.1"
deepmerge = "~1.1.0"
docker = "^5.0.3"
gitpython = "~3.1.41"
grandalf = "^0.8"
humanize = "~4.9.0"
importlib-resources = "~5.12.0"
inject = "~4.3.1"
jinja2 = "~3.1.2"
networkx = "~3.1"
packaging = "^23.2"
pathspec = "^0.11"
patool = "~1.12"
pluggy = "~1.3.0"
portalocker = "~2.7.0"
poetry-dynamic-versioning = "^1.2.0"
psutil = "~5.9.6"
pydantic = "~2.5.2"
pyjwt = "~2.4.0"
pyld = "~2.0.3"
pyshacl = "^0.25"
python-dateutil = "~2.8.2"
python-gitlab = "~4.2.0"
pyyaml = "~6.0.1"
rdflib = "^6.3.2"
requests = "~2.31.0"
rich = "^13.7.0"
shellingham = "~1.5.4"
tabulate = "^0.9"
toil = "~5.12.0"
tqdm = "~4.66.1"
werkzeug = "~3.0.1"
yagup = "^0.1"
yaspin = "~2.5.0"
"zc.relation" = "~2.0"
zodb = "~5.8.1"
zstandard = "^0.22"

# service dependencies:
apispec = { version = "~6.3.0", optional = true }
apispec-oneofschema = { version = "^3.0.0", optional = true}
apispec-webframeworks = { version = "^0.5", optional = true }
circus = { version = "^0.18", optional = true }
flask = { version = ">=2.3.3,<4.0.0", optional = true }
gunicorn = { version = "*", optional = true }
marshmallow = { version = "~3.19.0", optional = true }
marshmallow-oneofschema = { version = "^3.0.1", optional = true }
pillow = { version = "^10.1.0", optional = true }
python-dotenv = { version = "^0.20", optional = true }
redis = { version = "~5.0.1", optional = true }
rq = { version = "~1.15.1", optional = true }
sentry-sdk = { version = "~1.39.0", extras = ["flask"],  optional = true }
walrus = { version = "^0.9", optional = true }
prometheus-flask-exporter = "^0.23"
filetype = "^1.2.0"
orjson = "^3.9.10"

[tool.poetry.group.dev.dependencies]
black = "~23.1.0"
flake8 = "^6.1.0"
Flake8-pyproject = "==1.2.2"
isort = "^5.12.0"
mypy = "^1.7.1"
poetry-lock-package = "^0.5"
pre-commit = "^3.5.0"
types-PyYAML = "~6.0.12.12"
types-python-dateutil = "^2.8.19.14"
types-redis = "~4.0.6"
types-requests = "~2.30.0.0"
types-tabulate = "^0.9"

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
coverage = { version = "^6.0", extras=["toml"] }
fakeredis = { version = "~2.20", extras = ["lua"]}
flaky = "~3.7.0"
pexpect = "~4.9"
pydocstyle = "~6.3"
pyte = "^0.8"
pytest = "~7.4"
pytest-black = "^0.3"
pytest-cache = "~1.0"
pytest-cov = "~4.1"
pytest-flake8 = "~1.1"
pytest-lazy-fixture = "^0.6"
pytest-mock = "~3.12"
pytest-pep8 = "~1.0"
pytest-recording = "^0.13"
pytest-timeout = "~2.2"
pytest-xdist = "~3.5"
responses = "^0.24"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
plantweb = ">=1.2.1,<1.3.0"
renku-sphinx-theme = "^0.4"
sphinx-click = "^4.3.0"
sphinx-rtd-theme = "~1.3"
sphinx-tabs = "==3.4.4"
sphinxcontrib-spelling = ">=7,<9"

[tool.poetry.extras]
service = [
    "apispec",
    "apispec-oneofschema",
    "apispec-webframeworks",
    "circus",
    "flask",
    "gunicorn",
    "marshmallow",
    "marshmallow-oneofschema",
    "pillow",
    "python-dotenv",
    "redis",
    "rq",
    "sentry-sdk",
    "walrus"
]

[tool.poetry.scripts]
renku = "renku.ui.cli:cli"

[tool.black]
line-length = 120
target-version = ["py36", "py37", "py38"]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | docs/conf.py
)
'''

[tool.pydocstyle]
add_ignore = ["D105", "D107", "D202", "D401"]

[tool.bandit]
skips = ["B101", "B603", "B607", "B404"]
exclude_dirs = ["tests"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 120

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
dirty = true
format-jinja = """
    {%- if distance == 0 -%}
        {{ base }}{{"-%s"|format(stage) if stage else ""}}{{".%s"|format(revision) if revision else ""}}{{"+dirty" if dirty else ""}}
    {%- else -%}
        {{ base }}{{"-%s"|format(stage) if stage else ""}}{{".%s"|format(revision) if revision else ""}}.dev{{distance}}+g{{commit}}{{"-dirty" if dirty else ""}}
    {%- endif -%}
"""
pattern = """(?x)                                          (?# ignore whitespace)
    ^v(?P<base>\\d+(\\.\\d+)*)                             (?# v1.2.3)
    (-?((?P<stage>[a-zA-Z0-9]+)?\\.?(?P<revision>(pre|post)\\d+)?))?    (?# b0)
    (\\+(?P<tagged_metadata>.+))?$                       (?# e.g., +linux)
"""

[tool.pytest.ini_options]
addopts = "--doctest-glob=\"*.rst\" --doctest-modules --cov --cov-report=term-missing --ignore=docs/cheatsheet/ -ra"
doctest_optionflags = "ALLOW_UNICODE"
flake8-ignore = ["*.py", "E121", "E126", "E203", "E226", "E231", "W503", "W504", "docs/conf.py", "docs/cheatsheet/conf.py", "ALL"]
flake8-max-line-length = 120
testpaths = ["docs", "tests", "conftest.py"]
markers = [
    "integration: mark a test as a integration.",
    "jobs: mark a test as a job test.",
    "migration: mark a test as a migration test.",
    "publish: mark tests that publish datasets to external providers.",
    "redis: mark tests that need a running redis",
    "remote_repo: used to specify which remote to use in test fixtures.",
    "serial: mark a test that can not be run in parallel",
    "service: mark a test as service test.",
    "shaky: mark an integration test that might fail due to dataset providers' failures.",
    "shelled: mark a test as a shelled test."
]
filterwarnings = [
    "ignore:<class 'pytest_black.BlackItem'> is not using a cooperative constructor:pytest.PytestDeprecationWarning",
    "ignore:distutils Version classes are deprecated. Use packaging.version instead:DeprecationWarning"
]

[tool.mypy]
python_version = "3.10"
files = [
    "renku/**/*.py",
    "tests/**/*.py"
]
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "apispec.*",
    "apispec_oneofschema.*",
    "apispec_webframeworks.*",
    "appdirs",
    "BTrees.*",
    "bashlex.*",
    "calamus.*",
    "deepdiff",
    "deepmerge",
    "docker",
    "click_option_group",
    "click_plugins",
    "circus",
    "fakeredis",
    "flaky",
    "filetype.*",
    "grandalf.*",
    "gunicorn.*",
    "humanize",
    "lazy_object_proxy",
    "marshmallow_oneofschema",
    "networkx.*",
    "pathspec",
    "patoolib.*",
    "persistent.*",
    "pexpect",
    "PIL",
    "pluggy",
    "prometheus_flask_exporter.*",
    "psutil",
    "pyld",
    "pyshacl",
    "pyte",
    "ruamel",
    "rq",
    "shellingham",
    "setuptools",
    "toil.*",
    "tqdm",
    "urllib3.*",
    "walrus",
    "yagup.*",
    "yaspin",
    "zc.*",
    "ZODB.*",
    "zope.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "renku.core.migration.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "renku.command.schema.calamus.*"
ignore_errors = true

[tool.coverage.run]
omit = ["renku/conftest.py", "renku/data/*", "docs/*", "tests/*"]
relative_files = true

[tool.flake8]
max-line-length = 120
show-source = true
ignore = ["E121", "E126", "E203", "E226", "E231", "W503", "W504", "E121", "E126", "E203", "E226", "E231", "W503", "W504", "E121", "E126", "E203", "E226", "E231", "W503", "W504"]
exclude = ["docs"]


[build-system]
requires = ["poetry-core>=1.3.0,<1.7.0", "poetry-dynamic-versioning==1.2.0", "gitpython==3.1.41"]
build-backend = "poetry_dynamic_versioning.backend"
