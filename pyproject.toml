# -*- coding: utf-8 -*-
#
# Copyright 2017-2022 - Swiss Data Science Center (SDSC)
# A partnership between École Polytechnique Fédérale de Lausanne (EPFL) and
# Eidgenössische Technische Hochschule Zürich (ETHZ).
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[tool]

[tool.poetry]
name = "renku"
version = "0.0.0" # placeholder, see poetry-dynamic-versioning
description = "Python SDK and CLI for the Renku platform."
license = "Apache License 2.0"
keywords = ["Renku", "CLI"]
classifiers = [
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Development Status :: 4 - Beta",
]
homepage = "https://github.com/swissdatasciencecenter/renku-python"
documentation = "https://renku-python.rtfd.io/"

authors = ["Swiss Data Science Center <contact@datascience.ch>"]
include = ["renku/*", "renku/**/*", "CHANGES.rst", "AUTHORS.rst"]
readme = "README.rst"

[tool.poetry.urls]
Changelog = "https://github.com/swissdatasciencecenter/renku-python/blob/master/CHANGES.rst"

[tool.poetry.dependencies]
python = "^3.7.1"
appdirs = "<=1.4.4,>=1.4.3"
attrs = ">=21.1.0,<22.2.0"
bashlex = ">=0.16,<0.17"
black = { version = "==22.6.0", optional = true }
calamus = ">=0.3.13,<0.5"
click = ">=8.0,<8.1.4"
click-option-group = "<0.6.0,>=0.5.2"
click-plugins = "==1.1.1"
coverage = { version = "<6.5,>=4.5.3", extras=["toml"], optional = true }
cryptography = "<39.0.0,>=38.0.0"
cwl-utils = ">=0.12,<0.18"
cwltool = "==3.1.20220628170238"
deepdiff = "^5.8.0"
deepmerge = "==1.0.1"
docker = "<6,>=3.7.2"
filelock = ">=3.3.0,<3.8.1"
gitpython = "==3.1.27"
grandalf = "==0.7"
humanize = ">=3.0.0,<4.1.0"
importlib-resources = { version = ">=5.4.0,<5.10.0", python = "<3.9.0" }
inject = "<4.4.0,>=4.3.0"
jinja2 = { version = ">=2.11.3,<3.1.3" }
networkx = "<2.7,>=2.6.0"
numpy = ">=1.20.0,<1.22.0"
packaging = "<22.0,>=21.3"
pathspec = "<1.0.0,>=0.8.0"
patool = "==1.12"
pluggy = "==1.0.0"
portalocker = ">=2.2.1,<2.5"
poetry-dynamic-versioning = "0.21.3"
psutil = ">=5.4.7,<5.9.2"
pydantic = "==1.10.2"
pyjwt = ">=2.1.0,<2.5.0"
pyld = "==2.0.3"
pyopenssl = ">=19.0.0,<22.1.0"
pyshacl = ">=0.17.2,<0.18.2"
python-dateutil = "<2.8.3,>=2.6.1"
python-editor = "==1.0.4"
python-gitlab = ">=2.10.1,<3.8.2"
pyyaml = "<6.1.0,>=5.4"
rdflib = "<7.0,>=6.0.0"
requests = ">=2.23.0,<2.28.2"
rich = ">=9.3.0,<12.6.0"
shellingham = "1.5.0"
tabulate = ">=0.7.7,<0.8.11"
toil = { version = "==5.7.1", optional = true }
tqdm = "<4.62.4,>=4.48.1"
werkzeug = ">=1.0.0,<2.2.3"
yagup = ">=0.1.1"
yaspin = "==2.1.0"
"zc.relation" = "<1.2,>=1.1"
zodb = "==5.6.0"
zstandard = ">=0.16.0,<0.18.0"

# service dependencies:
apispec = { version = ">=4.0.0,<5.3.0", optional = true }
apispec-webframeworks = { version = "<0.6,>=0.5.2", optional = true }
circus = { version = "==0.17.1", optional = true }
flask = { version = "==2.1.1", optional = true }
gunicorn = { version = "*", optional = true }
marshmallow = { version = ">=3.18.0", optional = true }
marshmallow-oneofschema = { version = ">=3.0.1,<4.0.0", optional = true }
pillow = { version = ">=9.0.0,<9.4", optional = true }
python-dotenv = { version = ">=0.19.0,<0.21.0", optional = true }
redis = { version = ">=3.5.3,<4.2.0", optional = true }
rq = { version = "==1.11.0", optional = true }
rq-scheduler = { version = "==0.11.0", optional = true }
sentry-sdk = { version = ">=1.5.11,<1.5.12", extras = ["flask"],  optional = true }
walrus = { version = ">=0.8.2,<0.10.0", optional = true }

[tool.poetry.group.dev.dependencies]
black = "==22.6.0"
flake8 = [
    { version = ">=6.0.0,<7.0.0", python = ">=3.8.1"},
    { version = ">=4.0.0,<5.0.0", python = "<3.8.1"}
]
Flake8-pyproject = [
    { version ="==1.2.2", python = ">=3.8.1"},
    { version ="<1.0.0", python = "<3.8.1"}
]
isort = "<5.10.2,>=5.3.2"
mypy = ">=0.942,<1.0"
poetry-lock-package = "^0.4.3"
pre-commit = "^2.20.0"
types-PyYAML = "<6.1.0,>=5.4"
types-python-dateutil = "^2.8.10"
types-redis = ">=3.5.3,<4.1.0"
types-requests = "<2.27.2,>=2.23.0"
types-tabulate = "<0.8.10,>=0.7.7"
typing-extensions = { version = ">=4.3.0,<5.0.0", python = "<3.8.0" }

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
coverage = { version = "<6.5,>=4.5.3", extras=["toml"] }
fakeredis = { version = ">=1.4.1,<1.7.2", extras = ["lua"]}
flaky = "==3.7.0"
pexpect = "<4.9.0,>=4.8.0"
pydocstyle = "<6.1.2,>=4.0.1"
pyte = ">=0.8.0,<0.9.0"
pytest = ">=4.0.0,<7.1.4"
pytest-black = "<0.3.13,>=0.3.10"
pytest-cache = "==1.0"
pytest-cov = "<3.1.0,>=2.5.1"
pytest-flake8 = ">=1.0.6,<1.1.1"
pytest-mock = ">=3.2.0,<3.9.0"
pytest-pep8 = "==1.0.6"
pytest-recording = "==0.12.1"
pytest-timeout = "==2.1.0"
pytest-xdist = ">=1.34.0,<2.6.0"
responses = ">=0.22.0,<0.23.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
plantweb = ">=1.2.1,<1.3.0"
renku-sphinx-theme = ">=0.2.0"
sphinx-click = "^4.3.0"
sphinx-rtd-theme = "<1.1,>=0.5.0"
sphinx-tabs = "==3.2.0"
sphinxcontrib-spelling = "7.*"

[tool.poetry.extras]
toil = ["toil"]
service = [
    "apispec",
    "apispec-webframeworks",
    "circus",
    "flask",
    "gunicorn",
    "marshmallow",
    "marshmallow-oneofschema",
    "pillow",
    "python-dotenv",
    "redis",
    "rq",
    "rq-scheduler",
    "sentry-sdk",
    "walrus"
]

[tool.poetry.scripts]
renku = "renku.ui.cli:cli"

[tool.black]
line-length = 120
target-version = ["py36", "py37", "py38"]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | docs/conf.py
)
'''

[tool.pydocstyle]
add_ignore = ["D105", "D107", "D202", "D401"]


[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 120

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
dirty = true
format-jinja = """
    {%- if distance == 0 -%}
        {{ base }}{{"-%s"|format(stage) if stage else ""}}{{".%s"|format(revision) if revision else ""}}{{"+dirty" if dirty else ""}}
    {%- else -%}
        {{ base }}{{"-%s"|format(stage) if stage else ""}}{{".%s"|format(revision) if revision else ""}}.dev{{distance}}+g{{commit}}{{"-dirty" if dirty else ""}}
    {%- endif -%}
"""
pattern = """
    (?x)                                                (?# ignore whitespace)
    ^v(?P<base>\\d+(\\.\\d+)*)                             (?# v1.2.3)
    (-?((?P<stage>[a-zA-Z0-9]+)?\\.?(?P<revision>(pre|post)\\d+)?))?    (?# b0)
    (\\+(?P<tagged_metadata>.+))?$                       (?# e.g., +linux)
"""

[tool.pytest.ini_options]
addopts = "--flake8 --black --doctest-glob=\"*.rst\" --doctest-modules --cov --cov-report=term-missing --ignore=docs/cheatsheet/"
doctest_optionflags = "ALLOW_UNICODE"
flake8-ignore = ["*.py", "E121", "E126", "E203", "E226", "E231", "W503", "W504", "docs/conf.py", "docs/cheatsheet/conf.py", "ALL"]
flake8-max-line-length = 120
testpaths = ["docs", "tests", "renku", "conftest.py"]
markers = [
    "integration: mark a test as a integration.",
    "jobs: mark a test as a job test.",
    "migration: mark a test as a migration test.",
    "publish: mark tests that publish datasets to external providers.",
    "redis: mark tests that need a running redis",
    "serial: mark a test that can not be run in parallel",
    "service: mark a test as service test.",
    "shelled: mark a test as a shelled test.",
]
filterwarnings = [
    "ignore:<class 'pytest_black.BlackItem'> is not using a cooperative constructor:pytest.PytestDeprecationWarning",
    "ignore:distutils Version classes are deprecated. Use packaging.version instead:DeprecationWarning"
]

[tool.mypy]
python_version = "3.8"
files = [
    "renku/**/*.py",
    "tests/**/*.py"
]
implicit_optional = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "apispec.*",
    "apispec_webframeworks.*",
    "appdirs",
    "BTrees.*",
    "bashlex.*",
    "calamus.*",
    "deepdiff",
    "deepmerge",
    "docker",
    "click_option_group",
    "click_plugins",
    "circus",
    "fakeredis",
    "flaky",
    "grandalf.*",
    "gunicorn.*",
    "humanize",
    "lazy_object_proxy",
    "lockfile",
    "marshmallow_oneofschema",
    "networkx.*",
    "pathspec",
    "patoolib.*",
    "persistent.*",
    "pexpect",
    "PIL",
    "pluggy",
    "psutil",
    "pyld",
    "pyshacl",
    "pyte",
    "ruamel",
    "rq",
    "rq_scheduler",
    "shellingham",
    "toil.*",
    "tqdm",
    "urllib3.*",
    "walrus",
    "yagup.*",
    "yaspin",
    "zc.*",
    "ZODB.*",
    "zope.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "renku.core.migration.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "renku.command.schema.calamus.*"
ignore_errors = true

[tool.coverage.run]
omit = ["renku/conftest.py", "renku/data/*", "docs/*", "tests/*"]
relative_files = true

[tool.flake8]
max-line-length = 120
show-source = true
ignore = ["E121", "E126", "E203", "E226", "E231", "W503", "W504", "E121", "E126", "E203", "E226", "E231", "W503", "W504", "E121", "E126", "E203", "E226", "E231", "W503", "W504"]
exclude = ["docs"]


[build-system]
requires = ["poetry-core>=1.3.0", "poetry-dynamic-versioning==0.21.3", "gitpython==3.1.24"]
build-backend = "poetry_dynamic_versioning.backend"
